//------------------------------------------------------------------------------
// <auto-generated>
// </auto-generated>
//------------------------------------------------------------------------------




using System.Data.Entity.ModelConfiguration;
using Core.Entities.Process;


namespace DataAccess.ProcessModule.UnitOfWork.Mapping
{
    using System;
    using System.Collections.Generic;
    
    public partial class ExtendedFieldMapping:EntityTypeConfiguration<Core.Entities.Process.ExtendedField>
    {
        
        public ExtendedFieldMapping()
        {
    	this.Map(s => s.MapInheritedProperties());
                // Primary Key
    			
                this.HasKey(t => t.Id);
    
    
                // Properties
     
                    this.Property(t => t.Name).IsRequired();
    
    
     
                    this.Property(t => t.Description).HasMaxLength(500);
    
    
     
                    this.Property(t => t.ClientValidationClass).HasMaxLength(500);
    
    
     
                    this.Property(t => t.NameService).HasMaxLength(100);
    
    
    
                this.ToTable("ExtendedField","Process");
        this.Property(t => t.Id).HasColumnName("Id");
        this.Property(t => t.Name).HasColumnName("Name");
        this.Property(t => t.Description).HasColumnName("Description");
        this.Property(t => t.BaseFieldId).HasColumnName("BaseFieldId");
        this.Property(t => t.DataType).HasColumnName("DataType");
        this.Property(t => t.ClientValidationClass).HasColumnName("ClientValidationClass");
        this.Property(t => t.ListId).HasColumnName("ListId");
        this.Property(t => t.ProcessId).HasColumnName("ProcessId");
        this.Property(t => t.HtmlData).HasColumnName("HtmlData");
        this.Property(t => t.NameService).HasColumnName("NameService");
    
                // Relationships
                this.HasOptional(t => t.ExtendedList)
                    .WithMany(t => t.ExtendedField)
                    .HasForeignKey(d => d.ListId);
                this.HasRequired(t => t.Process)
                    .WithMany(t => t.ExtendedField)
                    .HasForeignKey(d => d.ProcessId);
    
    
    
        }
    
        
        
        
        
        
        
        
        
        
        
    
        
        
        
        
    }
}
